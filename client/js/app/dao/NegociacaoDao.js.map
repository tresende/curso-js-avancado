{"version":3,"sources":["../../app-es6/dao/NegociacaoDao.js"],"names":["NegociacaoDao","connection","_connection","_store","Promise","resolve","reject","negociacoes","cursor","transaction","objectStore","openCursor","onsuccess","atual","e","target","result","dado","value","push","Negociacao","_data","_quantidade","_valor","continue","onerror","negociacao","request","add","console","log","error","clear"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qCAAaA,a;AAET,uCAAYC,UAAZ,EAAwB;AAAA;;AAEpB,yBAAKC,WAAL,GAAmBD,UAAnB;AACA,yBAAKE,MAAL,GAAc,aAAd;AACH;;;;iDAEY;AAAA;;AACT,+BAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,gCAAIC,cAAc,EAAlB;AACA,gCAAIC,SAAS,MAAKN,WAAL,CACRO,WADQ,CACI,CAAC,MAAKN,MAAN,CADJ,EACmB,WADnB,EAERO,WAFQ,CAEI,MAAKP,MAFT,EAGRQ,UAHQ,EAAb;;AAMAH,mCAAOI,SAAP,GAAmB,aAAK;AACpB,oCAAIC,QAAQC,EAAEC,MAAF,CAASC,MAArB;AACA,oCAAIH,KAAJ,EAAW;AACP,wCAAII,OAAOJ,MAAMK,KAAjB;AACAX,gDAAYY,IAAZ,CAAiB,IAAIC,UAAJ,CAAeH,KAAKI,KAApB,EAA2BJ,KAAKK,WAAhC,EAA6CL,KAAKM,MAAlD,CAAjB;AACAV,0CAAMW,QAAN;AACH,iCAJD,MAIO;AACHnB,4CAAQE,WAAR;AACH;AACJ,6BATD;;AAWAC,mCAAOiB,OAAP,GAAiB,aAAK;;AAElBnB,uCAAO,yCAAP;AACH,6BAHD;AAKH,yBAzBM,CAAP;AA0BH;;;6CAEQoB,U,EAAY;AAAA;;AAEjB,+BAAO,IAAItB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,gCAAIqB,UAAU,OAAKzB,WAAL,CACTO,WADS,CACG,CAAC,OAAKN,MAAN,CADH,EACkB,WADlB,EAETO,WAFS,CAEG,OAAKP,MAFR,EAGTyB,GAHS,CAGLF,UAHK,CAAd;;AAKAC,oCAAQf,SAAR,GAAoB,UAACE,CAAD,EAAO;;AAEvBT;AACH,6BAHD;;AAKAsB,oCAAQF,OAAR,GAAkB,aAAK;;AAEnBI,wCAAQC,GAAR,CAAYhB,EAAEC,MAAF,CAASgB,KAArB;AACAzB,uCAAO,yCAAP;AACH,6BAJD;AAKH,yBAjBM,CAAP;AAkBH;;;iDAEY;AAAA;;AACT,+BAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gCAAIqB,UAAU,OAAKzB,WAAL,CACTO,WADS,CACG,CAAC,OAAKN,MAAN,CADH,EACkB,WADlB,EAETO,WAFS,CAEG,OAAKP,MAFR,EAGT6B,KAHS,EAAd;AAIAL,oCAAQf,SAAR,GAAoB,UAACE,CAAD,EAAO;AACvBT,wCAAQ,WAAR;AACH,6BAFD;;AAKAsB,oCAAQF,OAAR,GAAkB,aAAK;;AAEnBI,wCAAQC,GAAR,CAAYhB,EAAEC,MAAF,CAASgB,KAArB;AACAzB,uCAAO,wCAAP;AACH,6BAJD;AAMH,yBAhBM,CAAP;AAiBH","file":"NegociacaoDao.js","sourcesContent":["export class NegociacaoDao {\n\n    constructor(connection) {\n\n        this._connection = connection;\n        this._store = 'negociacoes';\n    }\n\n    listaTodos() {\n        return new Promise((resolve, reject) => {\n\n            let negociacoes = [];\n            let cursor = this._connection\n                .transaction([this._store], 'readwrite')\n                .objectStore(this._store)\n                .openCursor();\n\n\n            cursor.onsuccess = e => {\n                let atual = e.target.result;\n                if (atual) {\n                    let dado = atual.value;\n                    negociacoes.push(new Negociacao(dado._data, dado._quantidade, dado._valor));\n                    atual.continue();\n                } else {\n                    resolve(negociacoes);\n                }\n            };\n\n            cursor.onerror = e => {\n\n                reject('Não foi possível adicionar a negociação');\n            };\n\n        })\n    }\n\n    adiciona(negociacao) {\n\n        return new Promise((resolve, reject) => {\n\n            let request = this._connection\n                .transaction([this._store], 'readwrite')\n                .objectStore(this._store)\n                .add(negociacao);\n\n            request.onsuccess = (e) => {\n\n                resolve();\n            };\n\n            request.onerror = e => {\n\n                console.log(e.target.error);\n                reject('Não foi possível adicionar a negociação');\n            };\n        });\n    }\n\n    apagaTodos() {\n        return new Promise((resolve, reject) => {\n            let request = this._connection\n                .transaction([this._store], 'readwrite')\n                .objectStore(this._store)\n                .clear()\n            request.onsuccess = (e) => {\n                resolve('Apagadas!');\n            };\n\n\n            request.onerror = e => {\n\n                console.log(e.target.error);\n                reject('Não foi possível apagar as negociações');\n            };\n\n        })\n    }\n}\n\n// ConnectionFactory.getConnection().then(connection => {\n//     var dao = new NegociacaoDao(connection);\n//     console.log(dao);\n//     dao.adiciona(new Negociacao(new Date(), 7, 100))\n// });\n"]}